Исходя из анализа данных, в таблицах видны следующие связи:
- между таблицами Accounts и Numbers через поля UID;
- между таблицами Accounts и Call_logs через поля UID;
- между таблицами Call_logs и Numbers через поля UID, поля Call_logs.From и Numbers.Phone_Number, поля Call_logs.To и Numbers.Phone_Number;
- между таблицами Call_logs и Call_forwarding через поля From и To;
- между таблицами Call_forwarding и Numbers через поля Call_forwarding.From и Numbers.Phone_Number, поля Call_forwarding.To и Numbers.Phone_Number.
Графическое изображение установленных связей приведено в файле DB_structure.

Для выявлеия связи таблиц Accounts, Numbers, Call_logs, Call_forwarding с таблицей Rates недостаточно информации. Необходимо уточить временной период тарификации приведенной в БД стоимости исходящих звонков (поминутная/почасовая и т.д.). В таком случае, появится возможность связать таблицу Rates с таблицей Call_logs. Как вариант:
- добавить в Call_logs рассчетное поле Call_duration: рассчитывается, как разница между концом и началом звонка, в минутах, с округлением до ближайшего бОльшего значения;
- добавить в Rates поле Timestamp.

I. Алгоритм решения задачи по расчету затрат.
1. Отобрать все исходящие звонки: Call_logs.Call_dir=out.
2. В исходящих звонках отобрать звонки с номеров, которые не содержатся в Numbers.Phone_Number.
3. Рассчитать длительность каждого исходящего звонка, совершенного с номеров, не содержащихся в Numbers.Phone_Number. 
В связи с тем, что из исходных данных не понятна тарифкация, в целях решения тестовой задачи, предположим, что тарификация поминутная (в реальной ситуации необходимо утoчнить временной период, за который устанавливается расценка Rates.Description). Полученные значения в минутах округлить до ближайшего бОльшего значения. Пыталась использовать функцию Ceiling, но так и не удалось получить нужного округления. В итоге, просто отсекаются секунды и в отбор попадает только целое количество минут (т.е. полученные данные будут некорректны). 
Еще, как вариант, можно составить запрос с использованием if: если в полученном расчетном значении секунды >0, то к полученному результату минут +1, иначе остается полученный при вычислении результат. Но мне не удалось корректно сформулировать запрос.
4. Рассчитать общую стоимость звонков, умножив полученное в п.3 итоговое значение на 0.04.
Код запроса SQL:

Select Sum(TIMESTAMPDIFF(minute, Call_logs.Timestamp_start, Call_logs.Timestamp_end))*0.04
From Numbers
Right Join Call_logs
On Numbers.Phone_Number=Call_logs.From
Where Numbers.Phone_Number is NULL and Call_logs.Call_dir='out'

II. Алгоритм решения задачи Top 10: Most active users.
Из имеющихся исходных данных не понятен критерий оценки пользовательской активности. Возможны несколько критериев:
- количество исходящих звонков;
- общая длительность исходящих звонков.
В реальной ситуации необходимо конкретизировать, по какому критерию осуществлять отбор.
1. Рассмотрим вариант, когда активность пользователей определяется, исходя из количества совершенных исходящих зконков.
Для решения задачи необходимо рассчитать по каждому Call_logs.UID общее количеств исходящих звонков. 
Отобрать 10 Call_logs.UID с максимальным количеством звонков.  
Необходимо уточнить, как поступать в случае, если в результате отбора 11-й, 12-й и т.д. пользователи (10+n пользователь) будут иметь одинаковое количество звонков с 10-м пользователем. В отбор должен попадать:
- только 10-й пользователь (тогда по какому критерию его отбирать: в произвольном порядке, по UID, по наличию/отсутствию номера телефона пользователя в Numbers.Phone_number, по какому-то иному основанию);
- все 10+n пользователей, имеющих одинаковое количество звонков с 10-м пользователем.
В приведенном решении рассмотрен вариант, когда в отбор попадает всего 10 пользователей, 10-й пользователь выбран в произвольном порядке.
Код запроса SQL:

Select UID, count("From") as Number_of_calls
From Call_logs
Group by UID
Order by Number_of_calls Desc
Limit 10

2. Рассмотрим вариант, когда активность пользователей определяется, исходя из общей длительности исходящих звонков.
Для решения задачи необходимо рассчитать по каждому Call_logs.UID общую длительность исходящих звонков. 
Отобрать 10 Call_logs.UID с максимальной суммарной длительностью звонков.
Полученные значения в минутах округлить до ближайшего бОльшего значения. Возникла та же проблема, что и при решении задачи на определение общей суммы затрат. Пыталась использовать функцию Ceiling, но так и не удалось получить нужного округления. В итоге, просто отсекаются секунды и в отбор попадает только целое количество минут (т.е. полученные данные будут некорректны). 
Еще, как вариант, можно составить запрос с использованием if:если в полученном расчетном значении секунды >0, то к полученному результату минут +1, иначе остается полученный при вычислении результат. Но мне не удалось корректно сформулировать запрос.
Необходимо также уточнить, как поступать в случае, если в результате отбора 11-й, 12-й и т.д. пользователи (10+n пользователь) будут иметь одинаковую суммарную длительноть звонков с 10-м пользователем. В отбор должен попадать:
- только 10-й пользователь (тогда по какому критерию его отбирать: в произвольном порядке, по UID, по наличию/отсутствию номера телефона пользователя в Numbers.Phone_number, по какому-то иному основанию);
- все 10+n пользователей, имеющих одинаковую общую длительность звонков с 10-м пользователем.
В приведенном решении рассмотрен вариант, когда в отбор попадает всего 10 пользователей, 10-й пользователь выбран в произвольном порядке.
Код запроса SQL:

Select UID, count(TIMESTAMPDIFF(minute, Timestamp_start, Timestamp_end)) as Call_duration
From Call_logs
Where Call_logs.Call_dir='out'
Group by UID
Order by Call_duration Desc
Limit 10

III. Алгоритм решения задачи Top 10: Users with highest charges.
1. Отобрать все исходящие звонки: Call_logs.Call_dir=out.
2. В исходящих звонках отобрать звонки с номеров, которые не содержатся в Numbers.Phone_Number.
3. Рассчитать длительность исходящих звонков, совершенных с номеров, не содержащихся в Numbers.Phone_Number по каждому Call_logs.UID. В связи с тем, что из исходных данных не понятна тарифкация, в целях решения тестовой задачи, предположим, что тарификация поминутная (в реальной ситуации необходимо утoчнить временной период, за который устанавливается расценка Rates.Description). 
Полученные значения в минутах округлить до ближайшего бОльшего значения. Пыталась использовать функцию Ceiling, но так и не удалось получить нужного округления. В итоге, просто отсекаются секунды и в отбор попадает только целое количество минут. 
Еще, как вариант, можно составить запрос с использованием if: если в полученном расчетном значении секунды >0, то к полученному результату минут +1, иначе остается полученный при вычислении результат. Но мне не удалось корректно сформулировать запрос.
4. Рассчитать стоимость звонков каждого Call_logs.UID. Умножить полученное в п.3 по каждому Call_logs.UID значение на 0.04. 
5. Отобрать 10 Call_logs.UID с максимальным результатом, полученным при расчете в п.4. В данном случае также возникает необходимость уточнить, как поступать в случае, если в результате отбора 11-й, 12-й и т.д. пользователи (10+n пользователь) будут иметь одинаковую суммарную стоимость звонков с 10-м пользователем. В отбор должен попадать:
- только 10-й пользователь (тогда по какому критерию его отбирать: в произвольном порядке, по UID, по наличию/отсутствию номера телефона пользователя в Numbers.Phone_number, по какому-то иному основанию);
- все 10+n пользователей, имеющих одинаковую суммарную стоимость звонков с 10-м пользователем.
В приведенном решении рассмотрен вариант, когда в отбор попадает всего 10 пользователей, 10-й пользователь выбран в произвольном порядке.
Код запроса SQL:

Select Call_logs.UID, Sum(TIMESTAMPDIFF(minute, Call_logs.Timestamp_start, Call_logs.Timestamp_end))*0.04 as Cost_of_calls
From Numbers
Right Join Call_logs
On Numbers.Phone_Number=Call_logs.From
Where Numbers.Phone_Number is NULL and Call_logs.Call_dir='out'
Group by Call_logs.UID
Order by Cost_of_calls Desc
Limit 10

